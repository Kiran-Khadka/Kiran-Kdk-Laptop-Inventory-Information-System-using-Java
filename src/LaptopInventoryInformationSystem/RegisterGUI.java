/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LaptopInventoryInformationSystem;

/**
 *
 * @author Group 1 (Abhiyan, Bajra, Kiran, Subigyan -L2C16)
 */

import javax.swing.*;
import javax.swing.JOptionPane;
import java.awt.Desktop;
import java.io.FileWriter;
import java.io.File;
import java.util.ArrayList;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Logger;
import java.util.logging.Level;

public class RegisterGUI extends javax.swing.JFrame {

    public ArrayList<Laptop> laptopList; // creating arraylist Laptop
    InventoryGUI table_Inventory;  // declaring jtable from InventoryGUI java class
     
    /**
     * Creates new form RegisterGUI
     */
    public RegisterGUI() {

        initComponents();

        ButtonGroup priceRange = new ButtonGroup();  // declare button group for price range
        priceRange.add(radbtn_Low);
        priceRange.add(radbtn_High);
        priceRange.add(radbtn_Medium);

        laptopList = new ArrayList<Laptop>(); // declaring arraylist Laptop

        // declare method for placeholder in textfields
        txt_StoragePlaceholder();
        txt_MemoryPlaceholder();
        txt_PricePlaceholder();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Body = new javax.swing.JPanel();
        lbl_LaptopID = new javax.swing.JLabel();
        lbl_Manufacturer = new javax.swing.JLabel();
        lbl_Type = new javax.swing.JLabel();
        lbl_ModName = new javax.swing.JLabel();
        lbl_ModNum = new javax.swing.JLabel();
        lbl_CPU = new javax.swing.JLabel();
        lbl_gpu = new javax.swing.JLabel();
        lbl_display = new javax.swing.JLabel();
        lbl_Memory = new javax.swing.JLabel();
        lbl_Storage = new javax.swing.JLabel();
        lbl_Price = new javax.swing.JLabel();
        lbl_PriceRange = new javax.swing.JLabel();
        lbl_Rating = new javax.swing.JLabel();
        txt_LaptopID = new javax.swing.JTextField();
        txt_ModName = new javax.swing.JTextField();
        cb_Manufacturer = new javax.swing.JComboBox<>();
        txt_ModNum = new javax.swing.JTextField();
        txt_CPU = new javax.swing.JTextField();
        txt_GPU = new javax.swing.JTextField();
        txt_Display = new javax.swing.JTextField();
        txt_Memory = new javax.swing.JTextField();
        cb_Storage = new javax.swing.JComboBox<>();
        radbtn_Low = new javax.swing.JRadioButton();
        radbtn_Medium = new javax.swing.JRadioButton();
        radbtn_High = new javax.swing.JRadioButton();
        slider_Rating = new javax.swing.JSlider();
        txt_Price = new javax.swing.JTextField();
        txt_Storage = new javax.swing.JTextField();
        cb_Type = new javax.swing.JComboBox<>();
        btn_Clear = new javax.swing.JButton();
        btn_Back = new javax.swing.JButton();
        btn_Forward = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_File = new javax.swing.JMenu();
        menuItem_New = new javax.swing.JMenuItem();
        menuItem_Exit = new javax.swing.JMenuItem();
        menu_Edit = new javax.swing.JMenu();
        menuItem_Undo = new javax.swing.JMenuItem();
        menuItem_Redo = new javax.swing.JMenuItem();
        menuItem_Cut = new javax.swing.JMenuItem();
        menuItem_Copy = new javax.swing.JMenuItem();
        menuItem_Paste = new javax.swing.JMenuItem();
        menu_About = new javax.swing.JMenu();
        menuItem_About = new javax.swing.JMenuItem();
        menu_Help = new javax.swing.JMenu();
        menuItem_Manual = new javax.swing.JMenuItem();
        menuItem_Faq = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Laptop Inventory Information System | Registration 11.11\n");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(91, 145, 178));
        setForeground(new java.awt.Color(91, 145, 178));
        setResizable(false);

        panel_Body.setBackground(new java.awt.Color(1, 96, 149));
        panel_Body.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbl_LaptopID.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_LaptopID.setForeground(new java.awt.Color(201, 217, 222));
        lbl_LaptopID.setText("Laptop ID:");

        lbl_Manufacturer.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Manufacturer.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Manufacturer.setText("Manufacturer:");

        lbl_Type.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Type.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Type.setText("Type:");

        lbl_ModName.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_ModName.setForeground(new java.awt.Color(201, 217, 222));
        lbl_ModName.setText("Model Name:");

        lbl_ModNum.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_ModNum.setForeground(new java.awt.Color(201, 217, 222));
        lbl_ModNum.setText("Model Number:");

        lbl_CPU.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_CPU.setForeground(new java.awt.Color(201, 217, 222));
        lbl_CPU.setText("CPU:");

        lbl_gpu.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_gpu.setForeground(new java.awt.Color(201, 217, 222));
        lbl_gpu.setText("GPU:");

        lbl_display.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_display.setForeground(new java.awt.Color(201, 217, 222));
        lbl_display.setText("Display:");

        lbl_Memory.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Memory.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Memory.setText("Memory:");

        lbl_Storage.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Storage.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Storage.setText("Storage:");

        lbl_Price.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Price.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Price.setText("Price:");

        lbl_PriceRange.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_PriceRange.setForeground(new java.awt.Color(201, 217, 222));
        lbl_PriceRange.setText("Price Range:");

        lbl_Rating.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        lbl_Rating.setForeground(new java.awt.Color(201, 217, 222));
        lbl_Rating.setText("Rating:");

        txt_LaptopID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_LaptopIDKeyPressed(evt);
            }
        });

        cb_Manufacturer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Here", "Acer", "Apple", "Asus", "Dell", "HP", "Lenovo", "MSI", "Razerblade" }));

        txt_Memory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_MemoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_MemoryFocusLost(evt);
            }
        });

        cb_Storage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Here", "SSD", "HDD", "SSD+HDD" }));

        radbtn_Low.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        radbtn_Low.setForeground(new java.awt.Color(243, 248, 47));
        radbtn_Low.setSelected(true);
        radbtn_Low.setText("Low");
        radbtn_Low.setMaximumSize(new java.awt.Dimension(47, 28));
        radbtn_Low.setMinimumSize(new java.awt.Dimension(47, 28));

        radbtn_Medium.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        radbtn_Medium.setForeground(new java.awt.Color(243, 248, 47));
        radbtn_Medium.setText("Medium");

        radbtn_High.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        radbtn_High.setForeground(new java.awt.Color(243, 248, 47));
        radbtn_High.setText("High");

        slider_Rating.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        slider_Rating.setForeground(new java.awt.Color(255, 255, 255));
        slider_Rating.setMajorTickSpacing(1);
        slider_Rating.setMaximum(5);
        slider_Rating.setMinimum(1);
        slider_Rating.setPaintLabels(true);
        slider_Rating.setValue(1);
        slider_Rating.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txt_Price.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PriceFocusLost(evt);
            }
        });
        txt_Price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_PriceKeyPressed(evt);
            }
        });

        txt_Storage.setToolTipText("");
        txt_Storage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_StorageFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_StorageFocusLost(evt);
            }
        });

        cb_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Here", "Gaming", "Notebook", "Ultrabook", "2 in 1" }));

        javax.swing.GroupLayout panel_BodyLayout = new javax.swing.GroupLayout(panel_Body);
        panel_Body.setLayout(panel_BodyLayout);
        panel_BodyLayout.setHorizontalGroup(
            panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BodyLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_ModName)
                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lbl_ModNum)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_CPU)
                            .addComponent(lbl_Type)))
                    .addComponent(lbl_Manufacturer)
                    .addComponent(lbl_LaptopID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addComponent(txt_CPU, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addComponent(lbl_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addComponent(lbl_PriceRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addComponent(radbtn_Low, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(radbtn_Medium)
                                .addGap(16, 16, 16)
                                .addComponent(radbtn_High))
                            .addComponent(slider_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_BodyLayout.createSequentialGroup()
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(352, 352, 352))
                                    .addGroup(panel_BodyLayout.createSequentialGroup()
                                        .addComponent(txt_ModNum, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(183, 183, 183)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                    .addComponent(txt_ModName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(183, 183, 183))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                    .addComponent(cb_Manufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(352, 352, 352)))
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addComponent(txt_LaptopID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(293, 293, 293)))
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addComponent(lbl_gpu)
                                .addGap(65, 65, 65)
                                .addComponent(txt_GPU, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_BodyLayout.createSequentialGroup()
                                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_display)
                                    .addComponent(lbl_Memory)
                                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lbl_Price, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_Storage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(41, 41, 41)
                                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_Price)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(txt_Display, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                            .addComponent(cb_Storage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BodyLayout.createSequentialGroup()
                                        .addComponent(txt_Memory, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(74, 74, 74)))))))
                .addGap(0, 44, Short.MAX_VALUE))
        );
        panel_BodyLayout.setVerticalGroup(
            panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BodyLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_LaptopID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_LaptopID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_GPU, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_gpu)))
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Display, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_display)))
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Manufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_Manufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ModName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_ModName)))
                    .addComponent(lbl_Memory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Memory))
                .addGap(18, 18, 18)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lbl_ModNum))
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(txt_ModNum, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_Storage)))
                .addGap(22, 22, 22)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_Type)
                        .addComponent(cb_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_Price))
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_CPU, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_CPU)))
                    .addGroup(panel_BodyLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radbtn_High)
                            .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radbtn_Low, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radbtn_Medium)
                                .addComponent(lbl_PriceRange)))))
                .addGap(1, 1, 1)
                .addGroup(panel_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Rating))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_Clear.setBackground(new java.awt.Color(250, 42, 65));
        btn_Clear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_Clear.setForeground(new java.awt.Color(255, 255, 255));
        btn_Clear.setText("Clear");
        btn_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ClearActionPerformed(evt);
            }
        });

        btn_Back.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_Back.setText("<<");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        btn_Forward.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_Forward.setText(">>");
        btn_Forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ForwardActionPerformed(evt);
            }
        });

        btn_Add.setBackground(new java.awt.Color(27, 90, 83));
        btn_Add.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(76, 169, 223));

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setFont(new java.awt.Font("Angsana New", 0, 37)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("| Laptop Inventory Information System");

        jLabel3.setFont(new java.awt.Font("Harrington", 1, 25)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LIIS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(608, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        menu_File.setText("File");

        menuItem_New.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_New.setText("New");
        menuItem_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_NewActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_New);

        menuItem_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuItem_Exit.setText("Exit");
        menuItem_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_ExitActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_Exit);

        jMenuBar1.add(menu_File);

        menu_Edit.setText("Edit");

        menuItem_Undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Undo.setText("Undo");
        menu_Edit.add(menuItem_Undo);

        menuItem_Redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Redo.setText("Redo");
        menu_Edit.add(menuItem_Redo);

        menuItem_Cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Cut.setText("Cut");
        menu_Edit.add(menuItem_Cut);

        menuItem_Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Copy.setText("Copy");
        menu_Edit.add(menuItem_Copy);

        menuItem_Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Paste.setText("Paste");
        menu_Edit.add(menuItem_Paste);

        jMenuBar1.add(menu_Edit);

        menu_About.setText("About");

        menuItem_About.setText("About");
        menuItem_About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_AboutActionPerformed(evt);
            }
        });
        menu_About.add(menuItem_About);

        jMenuBar1.add(menu_About);

        menu_Help.setText("Help");

        menuItem_Manual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Manual.setText("Manual");
        menuItem_Manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_ManualActionPerformed(evt);
            }
        });
        menu_Help.add(menuItem_Manual);

        menuItem_Faq.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItem_Faq.setText("FAQ");
        menuItem_Faq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_FaqActionPerformed(evt);
            }
        });
        menu_Help.add(menuItem_Faq);

        jMenuBar1.add(menu_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_Forward, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(463, 463, 463)
                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btn_Clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(panel_Body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_Forward)
                        .addComponent(btn_Back)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    /* clear method empties all the text field and other components to desired default condition */
    public void clear() {
        txt_LaptopID.setText("");
        cb_Manufacturer.setSelectedIndex(0);
        cb_Type.setSelectedIndex(0);
        txt_Display.setText("");
        txt_CPU.setText("");
        txt_GPU.setText("");
        txt_Memory.setText("");
        txt_ModName.setText("");
        txt_ModNum.setText("");
        txt_Price.setText("");
        cb_Storage.setSelectedIndex(0);
        txt_Storage.setText("");
        radbtn_Low.setSelected(true);
        radbtn_Medium.setSelected(false);
        radbtn_High.setSelected(false);
        slider_Rating.setValue(0);
        txt_StoragePlaceholder();
        txt_MemoryPlaceholder();
        txt_PricePlaceholder();

    }
    
    
    private void btn_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ClearActionPerformed
        // invoking the clear function 
        clear();

    }//GEN-LAST:event_btn_ClearActionPerformed

    /* this method opens the MainGUI GUI when back button is clicked and set the current opening GUI to be invisible*/
    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed

        this.setVisible(false);
        new MainGUI().setVisible(true);


    }//GEN-LAST:event_btn_BackActionPerformed

    
    /* this method opens the Inventory GUI when forward button is clicked and set the current opening GUI to be invisible*/
    private void btn_ForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ForwardActionPerformed

        this.setVisible(false);
        new InventoryGUI().setVisible(true);  //opens GUI for registration

    }//GEN-LAST:event_btn_ForwardActionPerformed

    private void menuItem_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_ExitActionPerformed
        // exits the sytem on click and gives choice when exiting
        int choice = JOptionPane.showOptionDialog(this, "DO you want to close?", "Quit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (choice == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_menuItem_ExitActionPerformed

    private void menuItem_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_NewActionPerformed
        // invoking method clear for action performed event
        clear();

    }//GEN-LAST:event_menuItem_NewActionPerformed

    /* addToFile method adds the data in the txt file using the comma for separating
       the data which is being input from each component and uses the file writing class to store the values
        in the txt file.*/
    public void addToFile() {
        try {
            FileWriter addLaptop = new FileWriter("src\\utility\\laptopData.txt");
            for (Laptop laptops : laptopList) {
                addLaptop.append(String.valueOf(laptops.getLaptopId()));
                addLaptop.append(',');
                addLaptop.append(laptops.getManufacturer());
                addLaptop.append(',');
                addLaptop.append(laptops.getType());
                addLaptop.append(',');
                addLaptop.append(laptops.getModelName());
                addLaptop.append(',');
                addLaptop.append(laptops.getModelNumber());
                addLaptop.append(',');
                addLaptop.append(laptops.getCpu());
                addLaptop.append(',');
                addLaptop.append(laptops.getGpu());
                addLaptop.append(',');
                addLaptop.append(laptops.getDisplay());
                addLaptop.append(',');
                addLaptop.append(laptops.getMemory().toUpperCase());
                addLaptop.append(',');
                addLaptop.append(laptops.getStorageSize().toUpperCase() + " " + laptops.getStorageType());
                addLaptop.append(',');
                addLaptop.append(String.valueOf(laptops.getPrice()));
                addLaptop.append(',');
                addLaptop.append(laptops.getPriceRange());
                addLaptop.append(',');
                addLaptop.append(String.valueOf(laptops.getRating()));
                addLaptop.append("\n");
                addLaptop.flush();
            }

            addLaptop.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error while adding..." + e.getMessage(),"Error Message",JOptionPane.ERROR_MESSAGE);
        }
    }

    /* this method recovers the file data into list and add to LaptopList using file reading system */
    public void recoverFileDataToList() {
        File laptopListFile = new File("src\\utility\\laptopData.txt");
        
        try ( Scanner fileRead = new Scanner(laptopListFile)) {
            while (fileRead.hasNextLine()) {
                String detailsRow = fileRead.nextLine();
                String[] details = detailsRow.split(",");
                String lapID = details[0];
                String manufacturer = details[1];
                String type = details[2];
                String modelName = details[3];
                String modelNumber = details[4];
                String cpu = details[5];
                String gpu = details[6];
                String display = details[7];
                String memory = details[8];
                String storage = details[9];
                String laptopPrice = details[10];
                String priceRange = details[11];
                String laptopRating = details[12];
                int laptopID = Integer.valueOf(lapID);
                double price = Double.valueOf(laptopPrice);
                int rating = Integer.valueOf(laptopRating);
                String[] storageDetails = storage.split(" ");
                String storageSize = storageDetails[0] +" " + storageDetails[1];
                String storageType = "";
                for (int i = 2; i < storageDetails.length; i++) {
                    storageType = storageDetails[i] + " ";
                }

                laptopList.add(new Laptop(laptopID, manufacturer, modelName, modelNumber, type, cpu, gpu, display, memory, storageType, storageSize, price, priceRange, rating));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog (null, "Error while adding..." + e.getMessage(), "Error Message", JOptionPane.ERROR_MESSAGE);
        }

    }

    
    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed

        /* btn_Add adds the values in the table and clears the entries fields empty or in default indexes as desired*/
        try {

            String lapID = txt_LaptopID.getText();
            String manufacturer = cb_Manufacturer.getSelectedItem().toString();
            String modelName = txt_ModName.getText();
            String modelNumber = txt_ModNum.getText();
            String type = cb_Type.getSelectedItem().toString();
            String cpu = txt_CPU.getText();
            String gpu = txt_GPU.getText();
            String display = txt_Display.getText();
            String memory = txt_Memory.getText();
            String storageType = cb_Storage.getSelectedItem().toString();
            String storageSize = txt_Storage.getText();
            String laptopPrice = txt_Price.getText();
            String priceRange = "";
            if (radbtn_Low.isSelected()) {
                priceRange = "Low";
            }
            if (radbtn_Medium.isSelected()) {
                priceRange = "Medium";
            }
            if (radbtn_High.isSelected()) {
                priceRange = "High";
            }
            int rating = slider_Rating.getValue();

            if (lapID.isEmpty() || manufacturer.contains("Select Here") || display.isEmpty() || gpu.isEmpty() || cpu.isEmpty() || memory.isEmpty() || type.contains("Select Here") || modelName.isEmpty() || modelNumber.isEmpty() || laptopPrice.isEmpty() || storageType.contains("Select Here") || storageSize.isEmpty()||txt_Memory.getText().equals("Eg: 8 GB")||txt_Storage.getText().equals("Eg: 512 GB")||txt_Price.getText().equals("Price are inclusive of VAT")) {

                JOptionPane.showMessageDialog(this, "Please make sure all the fields are filled!", "Empty Field Warning", JOptionPane.WARNING_MESSAGE);

            } else {

                // data type conversion
                int laptopID = Integer.valueOf(lapID);
                double price = Double.valueOf(laptopPrice);

                laptopList.removeAll(laptopList);
                recoverFileDataToList();   // the txt file data is imported in the arraylist 

                boolean laptopExistance = false;
                for (Laptop laptops : laptopList) { // checking elements in arraylist
                    if (laptopID == laptops.getLaptopId()) {
                        JOptionPane.showMessageDialog(rootPane, "Laptop ID " + laptops.getLaptopId() + " is already registered!" + "\n" + "We suggest you to change Laptop ID only.", "Information Message", JOptionPane.INFORMATION_MESSAGE);
                        txt_LaptopID.setText("");
                        laptopExistance = true;
                        break;
                    }
                }
                if (laptopExistance == false) {
                    laptopList.add(new Laptop(laptopID, manufacturer, modelName, modelNumber, type, cpu, gpu, display, memory, storageType, storageSize, price, priceRange, rating));
                    addToFile(); // adding details in the txt file

                    JOptionPane.showMessageDialog(null, "The values have been successfully added!", "Product Registration Message", JOptionPane.INFORMATION_MESSAGE);
                    clear(); // invoking clear method after adding functionality occurs

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error while adding.... \n Please enter again!","Error Message", JOptionPane.ERROR_MESSAGE);
            clear();
        }
    }//GEN-LAST:event_btn_AddActionPerformed

    

    private void menuItem_ManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_ManualActionPerformed
        // TODO add your handling code here:
        File file = new File("src/utility/UserManual.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog (this, "File not found", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItem_ManualActionPerformed

    private void menuItem_FaqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_FaqActionPerformed
        // TODO add your handling code here:
        File faqFile = new File ("src/utility/FAQ.pdf");
        try {
            Desktop.getDesktop().open(faqFile);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "File not found","Error Message", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuItem_FaqActionPerformed

    private void txt_LaptopIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_LaptopIDKeyPressed
        // only numeric values is valid in the text field for laptop id
        char b = evt.getKeyChar();
        if (Character.isLetter(b)) {

            txt_LaptopID.setEditable(false);
            JOptionPane.showMessageDialog(this, "Please enter the numeric values only!", "Validity Error", JOptionPane.ERROR_MESSAGE);
            txt_LaptopID.setEditable(true);
        }
    }//GEN-LAST:event_txt_LaptopIDKeyPressed

    private void txt_PriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_PriceKeyPressed
        // TODO add your handling code here:
        char p = evt.getKeyChar();
        if (Character.isLetter(p)) {
            txt_Price.setEditable(false);
            JOptionPane.showMessageDialog(rootPane, "Please enter the numeric values only!", "Validity Error", JOptionPane.ERROR_MESSAGE);
            txt_Price.setEditable(true);
        }
    }//GEN-LAST:event_txt_PriceKeyPressed

    /* method for setting Placeholder in the textfield of Storage*/
    public void txt_StoragePlaceholder() {
        if (txt_Storage.isFocusOwner() == false) {
            if (txt_Storage.getText().isEmpty()) {
                txt_Storage.setForeground(new java.awt.Color(153, 153, 153));
                txt_Storage.setText("Eg: 512 GB");
            }
        }
    }

    /* method for setting the placeholder in the textfield of Memory*/
    public void txt_MemoryPlaceholder() {
        if (txt_Memory.isFocusOwner() == false) {
            if (txt_Memory.getText().isEmpty()) {
                txt_Memory.setForeground(new java.awt.Color(153, 153, 153));
                txt_Memory.setText("Eg: 8 GB");
            }
        }
    }
    
    /* method for setting the placeholder in the textfield of Price*/
    public void txt_PricePlaceholder() {
        if (txt_Price.isFocusOwner() == false) {
            if (txt_Price.getText().isEmpty()) {
                txt_Price.setForeground(new java.awt.Color(153, 153, 153));
                txt_Price.setText("Price are inclusive of VAT");
            }
        }
    }

    /* this method performs focus event; the placeholder is 
        visible when gui is opened*/
    private void txt_StorageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_StorageFocusGained
        // Focus gained for placeholder the text field of Storage
        if (txt_Storage.getText().equals("Eg: 512 GB")) {
            txt_Storage.setForeground(new java.awt.Color(0, 0, 0));
            txt_Storage.setText("");
        }


    }//GEN-LAST:event_txt_StorageFocusGained
    
    /* this method functions for losing the focus of the placholder when textfield is filled
        and again gains the focus if textfield remains unfilled*/
    private void txt_MemoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_MemoryFocusGained
        //  Focus gained for placeholder the text field of Memory

        if (txt_Memory.getText().equals("Eg: 8 GB")) {
            txt_Memory.setForeground(new java.awt.Color(0, 0, 0));
            txt_Memory.setText("");
        }

    }//GEN-LAST:event_txt_MemoryFocusGained

    private void txt_MemoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_MemoryFocusLost
        // When focus lost and nothing written then placeholder appears and if key typed disappears

        if (txt_Memory.getText().isEmpty()) {
            txt_Memory.setForeground(new java.awt.Color(153, 153, 153));
            txt_Memory.setText("Eg: 8 GB");
        }


    }//GEN-LAST:event_txt_MemoryFocusLost

    private void txt_StorageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_StorageFocusLost
        // When focus lost and nothing written then placeholder appears and if key typed disappears
        if (txt_Storage.getText().isEmpty()) {
            txt_Storage.setForeground(new java.awt.Color(153, 153, 153));
            txt_Storage.setText("Eg: 512 GB");
        }
    }//GEN-LAST:event_txt_StorageFocusLost

    private void txt_PriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PriceFocusGained
        // TODO add your handling code here:
        if (txt_Price.getText().equals("Price are inclusive of VAT")) {
            txt_Price.setForeground(new java.awt.Color(0, 0, 0));
            txt_Price.setText("");
        }
    }//GEN-LAST:event_txt_PriceFocusGained

    private void txt_PriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PriceFocusLost
        // TODO add your handling code here:
        if (txt_Price.getText().isEmpty()) {
            txt_Price.setForeground(new java.awt.Color(153, 153, 153));
            txt_Price.setText("Price are inclusive of VAT");
        }
    }//GEN-LAST:event_txt_PriceFocusLost

    private void menuItem_AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_AboutActionPerformed
        // TODO add your handling code here:
        try{
        JOptionPane.showMessageDialog(rootPane, "Designed and Developed By: Group 1 L2C16 \n" +"Members: Abhiyan Upreti, Bajra Manandhar, Kiran Khadka, Subigyan Adhikari", "About", JOptionPane.INFORMATION_MESSAGE );
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(this, " Error...\n Please try again!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItem_AboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Clear;
    private javax.swing.JButton btn_Forward;
    private javax.swing.JComboBox<String> cb_Manufacturer;
    private javax.swing.JComboBox<String> cb_Storage;
    private javax.swing.JComboBox<String> cb_Type;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_CPU;
    private javax.swing.JLabel lbl_LaptopID;
    private javax.swing.JLabel lbl_Manufacturer;
    private javax.swing.JLabel lbl_Memory;
    private javax.swing.JLabel lbl_ModName;
    private javax.swing.JLabel lbl_ModNum;
    private javax.swing.JLabel lbl_Price;
    private javax.swing.JLabel lbl_PriceRange;
    private javax.swing.JLabel lbl_Rating;
    private javax.swing.JLabel lbl_Storage;
    private javax.swing.JLabel lbl_Type;
    private javax.swing.JLabel lbl_display;
    private javax.swing.JLabel lbl_gpu;
    private javax.swing.JMenuItem menuItem_About;
    private javax.swing.JMenuItem menuItem_Copy;
    private javax.swing.JMenuItem menuItem_Cut;
    private javax.swing.JMenuItem menuItem_Exit;
    private javax.swing.JMenuItem menuItem_Faq;
    private javax.swing.JMenuItem menuItem_Manual;
    private javax.swing.JMenuItem menuItem_New;
    private javax.swing.JMenuItem menuItem_Paste;
    private javax.swing.JMenuItem menuItem_Redo;
    private javax.swing.JMenuItem menuItem_Undo;
    private javax.swing.JMenu menu_About;
    private javax.swing.JMenu menu_Edit;
    private javax.swing.JMenu menu_File;
    private javax.swing.JMenu menu_Help;
    private javax.swing.JPanel panel_Body;
    private javax.swing.JRadioButton radbtn_High;
    private javax.swing.JRadioButton radbtn_Low;
    private javax.swing.JRadioButton radbtn_Medium;
    private javax.swing.JSlider slider_Rating;
    private javax.swing.JTextField txt_CPU;
    private javax.swing.JTextField txt_Display;
    private javax.swing.JTextField txt_GPU;
    private javax.swing.JTextField txt_LaptopID;
    private javax.swing.JTextField txt_Memory;
    private javax.swing.JTextField txt_ModName;
    private javax.swing.JTextField txt_ModNum;
    private javax.swing.JTextField txt_Price;
    private javax.swing.JTextField txt_Storage;
    // End of variables declaration//GEN-END:variables
}
